#!/usr/bin/python
# Copyright (c) 2014, Red Hat, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of Red Hat nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Alexander Kurtakov <akurtako@redhat.com>

import javapackages.common.osgi as osgi
import javapackages.common.config as config
from javapackages.common.util import kill_parent_process, get_cachedir
import sys
import pickle
import os
import traceback

class TagBuilder(object):

    def __init__(self, filelist=None, cachedir=None):
        self.cachedir = cachedir
        if filelist == None:
            filelist = sys.stdin
        paths = [x.rstrip() for x in filelist.readlines()]

        provided = None
        for path in paths:
            # check if OSGi requires for this path were handled by metadata
            if osgi.check_path_in_metadata(path, self.cachedir):
                continue
            if not os.path.islink(path):
                reqs = osgi.get_requires(path)
                if provided is None:
                    provided = self.get_provided_bundles()
                for req in reqs:
                    if req in provided:
                        prov = provided[req]
                        print("osgi(%s) = %s" % (req, prov.version))
                    else:
                        print("osgi(%s)" % (req))


    def get_provided_bundles(self):
        # get all provided bundles, try cache first
        provided = osgi.read_provided_bundles_cache(self.cachedir)
        if not provided:
            provided = {}
            # no cache, create one
            buildroot = config.get_buildroot()
            bpaths = osgi.find_possible_bundles(buildroot)
            for path in bpaths:
                provided.update(osgi.get_provides(path))
            osgi.write_provided_bundles_cache(self.cachedir, provided)
        return provided


if __name__ == "__main__":
    try:
        if len(sys.argv) > 1:
            cachedir = get_cachedir(sys.argv[1])
        else:
            raise Exception("Missing param: cachedir")
        builder = TagBuilder(cachedir=cachedir)
    except Exception:
        traceback.print_exc(file=sys.stderr)
        # rpmbuild ignores non-zero exit codes but this that is bad. Make sure
        # the build fails and doesn't silently ignore problems
        kill_parent_process()
